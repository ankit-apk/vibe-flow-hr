version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: vibe_flow_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-vibeflowdb}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./scripts/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vibe_flow_api
    ports:
      - "${API_PORT:-3001}:3001"
    environment:
      VITE_PG_HOST: postgres
      VITE_PG_PORT: 5432
      VITE_PG_USER: ${POSTGRES_USER:-postgres}
      VITE_PG_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      VITE_PG_DATABASE: ${POSTGRES_DB:-vibeflowdb}
      API_PORT: 3001
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-and-long-jwt-key}
      NODE_ENV: development
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network

  frontend:
    image: node:20-alpine
    container_name: vibe_flow_frontend
    working_dir: /usr/src/app
    command: sh -c "npm install && npm run dev"
    ports:
      - "8080:8080"
    environment:
      - VITE_API_URL=/api
      - NODE_ENV=development
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: vibe_flow_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - api
      - frontend
    restart: unless-stopped
    networks:
      - app-network

volumes:
  pgdata:


networks:
  app-network:
    driver: bridge
